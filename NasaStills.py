#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 6.2
#  in conjunction with Tcl version 8.6
#    Nov 03, 2021 03:51:47 AM CDT  platform: Linux

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import NasaStills_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    NasaStills_support.set_Tk_var()
    top = Toplevel1 (root)
    NasaStills_support.init(root, top)
    root.mainloop()

w = None
def create_Toplevel1(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_Toplevel1(root, *args, **kwargs)' .'''
    global w, w_win, root
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    NasaStills_support.set_Tk_var()
    top = Toplevel1 (w)
    NasaStills_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'

        top.geometry("777x657+763+58")
        top.minsize(1, 1)
        top.maxsize(4225, 1410)
        top.resizable(0,  0)
        top.title("NasaStills - Tk")
        top.configure(background="skyblue4")
        top.configure(highlightcolor="black")

        self.Frame1 = tk.Frame(top)
        self.Frame1.place(x=31, y=10, height=492, width=714)
        self.Frame1.configure(relief='groove')
        self.Frame1.configure(borderwidth="2")
        self.Frame1.configure(relief="groove")

        self.labelImage = tk.Label(self.Frame1)
        self.labelImage.place(x=2, y=2, height=488, width=708)
        self.labelImage.configure(activebackground="#f9f9f9")
        self.labelImage.configure(background="skyblue3")

        self.chkAspect = tk.Checkbutton(top)
        self.chkAspect.place(x=110, y=530, height=23, width=187)
        self.chkAspect.configure(activebackground="skyblue3")
        self.chkAspect.configure(anchor='w')
        self.chkAspect.configure(background="skyblue4")
        self.chkAspect.configure(command=NasaStills_support.on_chkAspect)
        self.chkAspect.configure(compound='left')
        self.chkAspect.configure(foreground="antiquewhite2")
        self.chkAspect.configure(justify='left')
        self.chkAspect.configure(selectcolor="skyblue4")
        self.chkAspect.configure(text='''Correct Aspect Ratio''')
        self.chkAspect.configure(variable=NasaStills_support.che47)

        self.chkTime = tk.Checkbutton(top)
        self.chkTime.place(x=110, y=600, height=23, width=227)
        self.chkTime.configure(activebackground="skyblue3")
        self.chkTime.configure(anchor='w')
        self.chkTime.configure(background="skyblue4")
        self.chkTime.configure(command=NasaStills_support.on_chkTime)
        self.chkTime.configure(compound='left')
        self.chkTime.configure(foreground="antiquewhite2")
        self.chkTime.configure(justify='left')
        self.chkTime.configure(selectcolor="skyblue4")
        self.chkTime.configure(text='''Auto-reload every (seconds)''')
        self.chkTime.configure(variable=NasaStills_support.che48)

        self.btnExit = tk.Button(top)
        self.btnExit.place(x=493, y=526, height=33, width=85)
        self.btnExit.configure(activebackground="skyblue3")
        self.btnExit.configure(background="skyblue4")
        self.btnExit.configure(borderwidth="2")
        self.btnExit.configure(command=NasaStills_support.on_btnExit)
        self.btnExit.configure(foreground="#ffffff")
        self.btnExit.configure(highlightbackground="skyblue3")
        self.btnExit.configure(text='''Exit''')

        self.Spinbox1 = tk.Spinbox(top, from_=45.0, to=300.0)
        self.Spinbox1.place(x=360, y=600, height=23, width=58)
        self.Spinbox1.configure(activebackground="#f9f9f9")
        self.Spinbox1.configure(background="white")
        self.Spinbox1.configure(command=NasaStills_support.on_spinChange)
        self.Spinbox1.configure(font="TkDefaultFont")
        self.Spinbox1.configure(highlightbackground="black")
        self.Spinbox1.configure(selectbackground="blue")
        self.Spinbox1.configure(selectforeground="white")
        self.Spinbox1.configure(textvariable=NasaStills_support.spinbox)
        self.Spinbox1.configure(wrap="1")

        self.btnReload = tk.Button(top)
        self.btnReload.place(x=406, y=526, height=33, width=75)
        self.btnReload.configure(activebackground="skyblue3")
        self.btnReload.configure(background="skyblue4")
        self.btnReload.configure(borderwidth="2")
        self.btnReload.configure(command=NasaStills_support.on_btnReload)
        self.btnReload.configure(foreground="#ffffff")
        self.btnReload.configure(highlightbackground="skyblue3")
        self.btnReload.configure(text='''Reload''')

        self.btnSave = tk.Button(top)
        self.btnSave.place(x=319, y=526, height=33, width=73)
        self.btnSave.configure(activebackground="skyblue3")
        self.btnSave.configure(background="skyblue4")
        self.btnSave.configure(borderwidth="2")
        self.btnSave.configure(command=NasaStills_support.on_btnSave)
        self.btnSave.configure(cursor="fleur")
        self.btnSave.configure(foreground="#ffffff")
        self.btnSave.configure(highlightbackground="skyblue3")
        self.btnSave.configure(text='''Save''')

        self.btnSet = tk.Button(top)
        self.btnSet.place(x=440, y=595, height=33, width=73)
        self.btnSet.configure(activebackground="skyblue3")
        self.btnSet.configure(background="skyblue4")
        self.btnSet.configure(borderwidth="2")
        self.btnSet.configure(command=NasaStills_support.on_btnSet)
        self.btnSet.configure(foreground="#ffffff")
        self.btnSet.configure(highlightbackground="skyblue3")
        self.btnSet.configure(text='''Set''')

if __name__ == '__main__':
    vp_start_gui()





